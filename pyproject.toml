[project]
name = "hs-config"
version = "0.1.3a2"
keywords = ["Python", "配置", "Pydantic"]
description = ""
authors = [
    { name = "昊色居士", email = "xhrtxh@gmail.com" }
]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: BSD",
    "Operating System :: Microsoft :: Windows",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
license = "MIT"
readme = "README.md"
requires-python = ">= 3.10"

dependencies = [
    # pydantic 模型定义
    "pydantic[dotenv]>=2.9.2",
    # pydantic的设置插件
    "pydantic-settings[yaml,toml]>=2.5.2",
]

[project.urls]
homepage = "https://github.com/x-haose/hs-config"
repository = "https://github.com/x-haose/hs-config"
documentation = "https://github.com/x-haose/hs-config"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pre-commit>=4.0.1",
]
include = [
    "src/hs-config/"
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/sanic_api"]

[[tool.rye.sources]]
name = "default"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"

[tool.bandit]
skips = [
    "B501",
    "B113"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
select = [
    # pycodestyle error
    "E",
    # Pyflakes
    "F",
    # pycodestyle warnings
    "W",
    # pyupgrade
    "UP",
    # flake8-comprehensions
    "C",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = [
    # do not perform function calls in argument defaults
    "B008",
    # too complex
    "C901",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]


[tool.rye.scripts]
publish_testpypi = { cmd = "rye publish --repository testpypi --repository-url https://test.pypi.org/legacy/" }
publish_pypi = { cmd = "rye publish" }
sb = { cmd = "rye build --clean" }
spt = { chain = ["sb", "publish_testpypi"] }
sp = { chain = ["sb", "publish_pypi"] }
check_i = { cmd = "rye run pre-commit install" }
check = { cmd = "rye run pre-commit run --all-files" }
